syntax = "proto3";
package cosmosgaminghub.nibiru.nft;

import "gogoproto/gogo.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/cosmos-gaminghub/nibiru/x/nft/types";

// Msg defines the Msg service.
service Msg {
    rpc IssueDenom(MsgIssueDenom) returns (MsgIssueDenomResponse);
    rpc MintNFT(MsgMintNFT) returns (MsgMintNFTResponse);
    rpc EditNFT(MsgEditNFT) returns (MsgEditNFTResponse);
    rpc TransferNFT(MsgTransferNFT) returns (MsgTransferNFTResponse);
    rpc BurnNFT(MsgBurnNFT) returns (MsgBurnNFTResponse);
    // this line is used by starport scaffolding # proto/tx/rpc
}

// MsgIssueDenom defines an SDK message for creating a new denom.
message MsgIssueDenom {
    option (gogoproto.equal) = true;

    string denom_id = 1 [ (gogoproto.moretags) = "yaml:\"denom_id\"" ];
    string name = 2;
    string schema = 3;
    string sender = 4;
}

// MsgIssueDenomResponse defines the Msg/IssueDenom response type.
message MsgIssueDenomResponse {}

// MsgMintNFT defines an SDK message for creating a new NFT.
message MsgMintNFT {
    option (gogoproto.equal) = true;

    string denom_id = 1 [ (gogoproto.moretags) = "yaml:\"denom_id\"" ];
    string name = 2;
    string uri = 3 [ (gogoproto.customname) = "URI" ];
    string data = 4;
    string sender = 5;
    string recipient = 6;
}

// MsgMintNFTResponse defines the Msg/MintNFT response type.
message MsgMintNFTResponse {
    uint64 id = 1;
}

// MsgEditNFT defines an SDK message for editing a nft.
message MsgEditNFT {
    option (gogoproto.equal) = true;

    string denom_id = 1 [ (gogoproto.moretags) = "yaml:\"denom_id\"" ];
    uint64 id = 2;
    string name = 3;
    string data = 4;
    string sender = 5;
}

// MsgEditNFTResponse defines the Msg/EditNFT response type.
message MsgEditNFTResponse {}

// MsgTransferNFT defines an SDK message for transferring an NFT to recipient.
message MsgTransferNFT {
    option (gogoproto.equal) = true;

    string denom_id = 1 [ (gogoproto.moretags) = "yaml:\"denom_id\"" ];
    uint64 id = 2;
    string sender = 3;
    string recipient = 4;
}

// MsgTransferNFTResponse defines the Msg/TransferNFT response type.
message MsgTransferNFTResponse {}

// MsgBurnNFT defines an SDK message for burning a NFT.
message MsgBurnNFT {
    option (gogoproto.equal) = true;

    string denom_id = 1 [ (gogoproto.moretags) = "yaml:\"denom_id\"" ];
    uint64 id = 2;
    string sender = 3;
}

// MsgBurnNFTResponse defines the Msg/BurnNFT response type.
message MsgBurnNFTResponse {}

// this line is used by starport scaffolding # proto/tx/message